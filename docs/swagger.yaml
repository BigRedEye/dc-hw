openapi: 3.0.1
info:
  title: Online store skeleton
  description: "DC homework #1"
  contact:
    email: mail@sskvor.dev
  version: 1.0.0
tags:
- name: product
  description: Manage products
paths:
  /v1/product:
    post:
      tags:
      - product
      summary: Add a new product to the store
      operationId: addProduct
      requestBody:
        description: Product object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProduct'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /v1/product/{id}:
    put:
      tags:
      - product
      summary: Update an existing product
      operationId: updateProduct
      parameters:
      - name: id
        in: path
        description: ID of product to update
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Product object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProduct'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Invalid ID supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:         
      tags:
      - product
      summary: Get an existing product
      operationId: getProduct
      parameters:
      - name: id
        in: path
        description: ID of product to get
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Invalid ID supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:         
      tags:
      - product
      summary: Delete an existing product
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        description: ID of product to delete
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSuccess'
        404:
          description: Invalid ID supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /v1/products:
    get:
      tags:
      - product
      summary: List existing products
      operationId: listProducts
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
components:
  schemas:
    NewProduct:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        code:
          type: string
    Product:
      type: object
      required:
        - id
        - name
        - category
        - code
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        category:
          type: string
        code:
          type: string
    ProductList:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    ApiSuccess:
      type: object
      properties:
        status:
          type: string
    ApiError:
      type: object
      properties:
        error:
          type: string

